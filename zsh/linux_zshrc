## PATH for completion definition list
## Type 'sudo git clone git://github.com/zsh-users/zsh-completions.git /usr/local/share' for installation!
export FPATH="/usr/local/share/zsh-completion:$FPATH"

## Enable complement function
autoload -Uz compinit
compinit -u

## Environment variable
export LANG=en_US.UTF-8
export EDITOR=vim

## History
HISTFILE=~/.zsh_history
HISTSIZE=50000
SAVEHIST=500000

## Do not remember command if same as last command
setopt hist_ignore_dups

## Remove previous same command from history
setopt hist_save_no_dups

## Older first when remove command from history
setopt hist_expire_dups_first

## Delete unnecesary blank when command is saved
setopt hist_reduce_blanks

## Share history among terminals
setopt share_history

## Emacs key-bindings
bindkey -e

## Search history
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^p" history-beginning-search-backward-end
bindkey "^n" history-beginning-search-forward-end

## Enable 'cd' without typing
setopt auto_cd

## Use 'cd' like pushd
setopt auto_pushd
setopt pushd_ignore_dups

## Ignore Ctrl+D
setopt ignore_eof

## Command auto-correct
setopt correct

## No beep sound
setopt nolistbeep

## 'ls' optimization
setopt list_packed

## Enable color extension
autoload -Uz colors
colors -u

## You can check available colors with script below on shell
#for c in {000..255}; do echo -n "\e[38;5;${c}m $c" ; [ $(($c%16)) -eq 15 ] && echo;done;echo

## shell prompt
local USERC=$'%{\e[38;5;81m%}%n%{\e[m%}'
local HOSTC=$'%{\e[38;5;213m%}%m%{\e[m%}'
RPROMPT=$'%{\e[38;5;209m%}[%~]%{\e[m%}'
PROMPT=$USERC"@"$HOSTC"%# "

## git setting
### Enable a function to get info from vcs(version check system)
autoload -Uz vcs_info
autoload -Uz add-zsh-hook
zstyle ':vcs_info:*' enable git
### Display format
zstyle ':vcs_info:git:*' formats '{%b%u%c}'
zstyle ':vcs_info:git:*' actionformats '{%b|%a}'
### Enable to show staging, unstaging condition
zstyle ':vcs_info:git:*' check-for-changes true
zstyle ':vcs_info:git:*' stagedstr "*"
zstyle ':vcs_info:git:*' unstagedstr "+"
### Expand variable as prompt is displayed
setopt prompt_subst
### Execute vcs_info function every prompt
add-zsh-hook precmd update_vcs_info_msg
function update_vcs_info_msg() {
  LANG=en_US.UTF-8 vcs_info
  psvar=()
  if [ -n "$vcs_info_msg_0_" ]; then
    psvar[1]="$vcs_info_msg_0_"
    psvar[2]=$(git-push-status)
  fi
}
### Function for taking git status
function git-push-status() {
  if [ "$(git rev-parse --is-inside-work-tree 2>/dev/null)" = "true" ]; then
    local current_branch="$(git rev-parse --abbrev-ref HEAD)"
    if [ $current_branch != "HEAD" ]; then
      local push_count=$(git rev-list origin/"$current_branch".."$current_branch" 2>/dev/null | wc -l | tr -d ' ')
        if [ "$push_count" -gt 0 ]; then
            echo "â†‘ $push_count"
        fi
    fi
  fi
}
### Update RPROMPT
#RPROMPT='${vcs_info_msg_0_} '$RPROMPT
RPROMPT=$'%{\e[38;5;81m%}%1v%2v%{\e[m%} '$RPROMPT

## 'ls' colors
export LSCOLORS=exfxcxcxbxgxgxbxbxexex
export LS_COLORS='di=34:ln=35:so=32:pi=32:ex=31:bd=36:cd=36:su=31:sg=31:tw=34:ow=34'

## completion color setting
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}

## key ailias
alias vi='vim'
alias ls='ls --color'
alias ...='cd ../..'
alias ....='cd ../../..'
alias be='bundle exec'

## Display complement candidate temporarily
setopt ALWAYS_LAST_PROMPT

## When directory is complemented, '/' is autobatically added at the end
setopt AUTO_PARAM_SLASH

## Do not distinguish between lowercase and uppercase
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

## Disable shell built-in 'r'
disable r
