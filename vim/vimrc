"----------------
"General Settings
"----------------

"Autocmd initialize
augroup MyAutoCmd
  autocmd!
augroup END
"Enable syntax hilight
syntax on
"Limit the number of rows parsed for syntax hilight
set synmaxcol=300
"Use spaces instead of tab
set expandtab
"Disable beep
set visualbell t_vb=
"Display line numbers
set number
"Scroll down the window when the cursor moves below the 5 lines from the bottom
set scrolloff=5
"Enable search highlight
set hlsearch
"Tab width
set tabstop=2
"Tab width in autoident
set shiftwidth=2
"Enable autoindent
set autoindent
"Enable smartindent
set smartindent
"File encoding
set encoding=utf-8
"Judge CR,CR+LF,LF automatically
set fileformats=unix,dos,mac
"Wrap lines
set wrap
"Case-Insensitive
set ignorecase
"Do not make backup file
set nobackup
"Do not make swap file
set noswapfile
"Enable to switch another file without saving
set hidden
"Display status information
set laststatus=2
"Execution intervals for automation task like auto save
set updatetime=1000
"Enable to move anywhere
set virtualedit=all
"Show invisible letter
set list
set listchars=tab:▸-,trail:-,extends:»,precedes:«,nbsp:%,eol:↲
augroup highlightIdeographicSpace
  autocmd!
  autocmd VimEnter,WinEnter * match IdeographicSpace /　/
  autocmd Colorscheme * highlight IdeographicSpace term=underline ctermbg=DarkGreen guibg=DarkGreen
augroup END
"Disable mouse
set mouse=
"Enable backspace-key in insert mode
set backspace=indent,eol,start
"General key mapping
inoremap jj <Esc>
nnoremap <C-k> <C-a>
nnoremap <C-j> <C-x>
nnoremap j gj
nnoremap k gk
"Emacs like key mapping
inoremap <C-a> <Esc><Home>
inoremap <C-e> <Esc><End>
inoremap <C-f> <Right>
inoremap <C-b> <Left>
inoremap <C-h> <Backspace>
inoremap <C-d> <Delete>
noremap <C-a> <Home>
noremap <C-e> <End>
"Key mapping for marks
nnoremap mn ]`
nnoremap mp [`
nnoremap ml :marks {abcdefghijklmnopqrstuvwxyz}<CR>
nnoremap mL :marks<CR>
nnoremap t `
"Move the cursor to the position last located when any existing file opened
autocmd MyAutoCmd BufReadPost * normal! g`"
"Disable concealing function which conceal or replace some characters for convenience(e.g. math equation in tex)
set conceallevel=0
"Default filetype value of .tex file
let g:tex_flavor = 'tex'


"-------------
"Dein Settings
"-------------

let s:dein_dir = expand('~/.cache/dein')
let s:dein_repo_dir = s:dein_dir . '/repos/github.com/Shougo/dein.vim'

if !isdirectory(s:dein_repo_dir)
  execute '!git clone https://github.com/Shougo/dein.vim' s:dein_repo_dir
endif
execute 'set runtimepath^=' . s:dein_repo_dir

let s:toml_path = s:dein_dir . '/tomls/dein.toml'
let s:lazy_toml_path = s:dein_dir . '/tomls/dein_lazy.toml'

if dein#load_state(s:dein_dir)
  call dein#begin(s:dein_dir)
  call dein#load_toml(s:toml_path, {'lazy': 0})
  call dein#load_toml(s:lazy_toml_path, {'lazy': 1})
  call dein#end()
  call dein#save_state()
endif

"Automatically detecting filetype, loading indentation and plugin configuration for filetypes
filetype plugin indent on

if dein#check_install()
  call dein#install()
endif

"** NOTE **
"Execute commands below when:
"  - Plugins are added or removed
"  - Toml file is changed
"call dein#update() // for update
"call dein#clear_state() // remake state file manually
"call dein#recache_runtimepath()  // remake runtimepath cache file


"------------
"My functions
"------------

"Remove trailing spaces
:command! RMTS call RemoveTrailingSpaces()
function! RemoveTrailingSpaces()
  %s/\s\+$//ge
endfunction


"------------
"Color scheme
"------------

set background=dark
colorscheme hybrid
